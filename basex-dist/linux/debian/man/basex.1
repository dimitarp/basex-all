.\"Text automatically generated by txt2man
.TH basex 1 "14 October 2011" "" "The XML Database"
.SH NAME
\fBbasex \fP- XML database system and XPath/XQuery processor (command line mode)
\fB
.SH SYNOPSIS
.nf
.fam C
\fBbasex\fP [\fB-bdiosuvVwz\fP] [\fB-cq\fP] [\fIfile\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBbasex\fP is a fast and powerful, yet light-weight and platform independent XML
database system and XPath/XQuery processor.
.SH OPTIONS
.TP
.B
[\fIfile\fP]
Execute the specified XQuery \fIfile\fP.
.TP
.B
\fB-b\fP<pars>
Bind external variables to XQuery expression. Flag may be specified
multiple times; key/value pairs are separated by equality signs (=)
(\fB-bv\fP=example \fB-q\fP"declare variable $v external; $v")
.TP
.B
\fB-c\fP<cmd>
Launch database commands and skip interactive mode.
The flag should be placed last, as all remaining characters are
interpreted as commands. Several commands can be separated by 
semicolons.
.TP
.B
\fB-d\fP
Turn on debugging (to standard error).
.TP
.B
\fB-i\fP<input>
Open a database or XML document specified by the argument.
The opened input may be further processed by an XQuery expression.
.TP
.B
\fB-o\fP<\fIfile\fP>
Command and query output is written to the specified \fIfile\fP.
.TP
.B
\fB-q\fP<expr>
Execute the specified string as XQuery expression. The flag should
be placed last, as all remaining characters are interpreted as
XQuery.
.TP
.B
\fB-s\fP<pars>
Specify parameters for serializing XQuery results;
see SERIALIZATION for more details. This flag may be specified
multiple times; key/value pairs are separated by equality signs (=)
.TP
.B
\fB-u\fP
Modify original files after evaluating XQuery Update expressions
.TP
.B
\fB-v\fP
Process information is written to standard output
.TP
.B
\fB-V\fP
Detailed query information is written to standard output, 
including compilation and profiling steps.
.TP
.B
\fB-w\fP
By default, whitespaces around text nodes are chopped when a 
database is created. The flag specifies to suppress chopping.
.TP
.B
\fB-z\fP
Skip the serialization of XQuery results (may be useful for 
analyzing query plans)
.SH DATABASE COMMANDS
A list of supported Database commands can be obtained from
.PP
.nf
.fam C
    $ basex \-c help

.fam T
.fi
or by browsing http://docs.basex.org/wiki/Commands
.TP
.B
ADD (AS [name]) (TO [target]) [input]
Add document to database.
.TP
.B
ALTER [DATABASE|USER] [\.\.\.]
Alter database name or user password.
.TP
.B
CHECK [input]
Open or create database.
.TP
.B
CLOSE
Close current database.
.TP
.B
COPY [name] [newname]
Copy database.
.TP
.B
CREATE [BACKUP|DATABASE|EVENT|INDEX|USER] [\.\.\.]
Create database, index or user.
.TP
.B
CS [query]
Run XQuery and set result as new context set.
.TP
.B
DELETE [path]
Delete documents from database.
.TP
.B
DROP [BACKUP|DATABASE||EVENTINDEX|USER] [\.\.\.]
Drop database, index or user.
.TP
.B
EXIT
Exit application.
.TP
.B
EXPORT [path]
Export database to XML.
.TP
.B
FIND [keywords]
Run a keyword query.
.TP
.B
FLUSH
Flush database.
.TP
.B
GET [option]
Show global option.
.TP
.B
GRANT [NONE|READ|WRITE|CREATE|ADMIN] (ON [database]) TO [user]
Grant user permissions.
.TP
.B
HELP ([command])
Get help on BaseX commands.
.TP
.B
INFO ([DATABASE|INDEX|STORAGE])
Show information on current database.
.TP
.B
KILL [name]
Kill user sessions.
.TP
.B
LIST ([path])
List databases or documents in database.
.TP
.B
OPEN [path]
Open database.
.TP
.B
OPTIMIZE (ALL)
Optimize the database.
.TP
.B
PASSWORD ([password])
Change password.
.TP
.B
RENAME [path] [newpath]
Rename document paths in database.
.TP
.B
REPLACE [path] [input]
Replace documents in database.
.TP
.B
REPO [DELETE|INSTALL|LIST]
Install, delete or list packages.
.TP
.B
RESTORE [name\-(date)]
Restore database.
.TP
.B
RETRIEVE [path]
Retrieve raw data.
.TP
.B
RUN [path]
Run \fIfile\fP as XQuery.
.TP
.B
SET [option] ([value])
Set global options.
.TP
.B
SHOW [BACKUPS|DATABASES|EVENTS|SESSIONS|USERS]
Show server information.
.TP
.B
STORE (TO [path]) [input]
Store raw data.
.TP
.B
XQUERY [query]
Run XQuery.
.SH SERIALIZATION
Serialization parameters define how XQuery items and XML nodes are textually
output, i.e., serialized. They have been formalized in a W3C XQuery
Serialization 3.0 document available at http://www.w3.org/TR/xslt-xquery-serialization-30
.PP
In BaseX, they can be specified in several ways: 
.IP \(bu 3
by using the \fB-s\fP flag of the BaseX command-line clients,
.IP \(bu 3
by setting the SERIALIZER option before running a query,
.IP \(bu 3
by setting the EXPORTER option before exporting a database,
.IP \(bu 3
by setting them as Output Parameter of the REST API,
.IP \(bu 3
by including them in the prolog of the XQuery expression (since XQuery 3.0), or
.IP \(bu 3
by specifying them in the XQuery function \fBfile:write\fP().
.PP
An extensive documentation of all serialization parameters is to be found on:
http://docs.basex.org/wiki/Serialization
.PP
An example would be:
.PP
.nf
.fam C
    method=xml,encoding=CP1252

.fam T
.fi
.SH EXAMPLES
.IP \(bu 3
XQuery evaluation (no database, no interaction, script mode):
.PP
.nf
.fam C
   $ basex \-q 19+23
   42
   $ basex \-q "<answer>{ 23+19 }</answer>"
   <answer>42</answer>

.fam T
.fi
.IP \(bu 3
Import an XML \fIfile\fP into database, output its content (query its root) and be verbose:
.PP
.nf
.fam C
    $ basex \-Vc "CREATE DB input /usr/share/doc/basex/examples/input.xml; XQUERY /"
    Database 'input' created in 53.64 ms.
    <html>
      <!-- Header -->
      <head id="0">
        <title>XML</title>
      </head>
      <!-- Body -->
      <body id="1" bgcolor="#FFFFFF" text="#000000" link="#0000CC">
        <h1>Databases & XML</h1>
        <div align="right">
          <b>Assignments</b>
          <ul>
            <li>Exercise 1</li>
            <li>Exercise 2</li>
          </ul>
        </div>
      </body>
      <?pi bogus?>
    </html>

    Query: /

    Compiling:

    Result: root()

    Parsing: 0.19 ms
    Compiling: 9.27 ms
    Evaluating: 0.33 ms
    Printing: 3.08 ms
    Total Time: 12.88 ms
    Results: 1 Item
    Updated: 0 Items
    Printed: 375 Bytes
    Memory: 5834 KB

    Query executed in 13.25 ms.

.fam T
.fi
.IP \(bu 3
XPath evaluation (with existing database):
.PP
.nf
.fam C
    $ basex \-c "OPEN input; XQUERY //li[1]"
    <li>Exercise 1</li>

.fam T
.fi
.IP \(bu 3
Retrieve XML from the web and perform XPath query:
.PP
.nf
.fam C
    $ basex \-q "doc('https://raw.github.com/BaseXdb/basex/master/etc/test/input.xml')//li"
    <li>Exercise 1</li>
    <li>Exercise 2</li>

.fam T
.fi
.IP \(bu 3
W3C XQuery Full-Text (make use of full-text index and perform fuzzy query with a typing error):
.PP
.nf
.fam C
    $ basex
    BaseX 7.0 [Standalone]
    Try "help" to get more information.

    > SET FTINDEX on 
    Full-Text Index: ON
    > CREATE DB input /usr/share/doc/basex/examples/input.xml/input.xml
    Database 'input' created in 94.42 ms.
    > XQUERY //b[text() contains text 'Asisgnment' using fuzzy] 
    <b>Assignments</b>
    Query executed in 8.37 ms.

.fam T
.fi
.IP \(bu 3
Update the database and show result:
.PP
.nf
.fam C
    > XQUERY delete node //ul
    Query executed in 2.79 ms.
    > XQUERY replace value of node //b with 'Debian rules'
    Query executed in 2.94 ms.
    > XQUERY //div
    <div align="right">
      <b>Debian rules</b>
    </div>
    Query executed in 1.01 ms.

.fam T
.fi
.SH SEE ALSO
\fBbasexgui\fP(1), \fBbasexserver\fP(1), \fBbasexclient\fP(1)
.TP
.B
~/.\fBbasex\fP
BaseX (standalone and server) properties
.TP
.B
~/.basexgui
BaseX additional GUI properties 
.TP
.B
~/.basexperm
user name, passwords, and permissions
.TP
.B
~/.basexevents
contains all existing events
.TP
.B
~/BaseXData
Default database directory
.TP
.B
~/BaseXData/.logs
Server logs
.TP
.B
~/BaseXRepo
Package repository
.PP
BaseX Documentation Wiki: http://docs.basex.org
.SH HISTORY
BaseX started as a research project of the Database and Information Systems
Group (DBIS) at the University of Konstanz in 2005 and soon turned into a
feature-rich open source XML database and XPath/XQuery processor.
.SH LICENSE
New (3-clause) BSD License
.SH AUTHOR
BaseX is developed by a bunch of people called 'The BaseX Team'
<http://basex.org/about-us/> led by Christian Gruen <cg@basex.org>.
.PP
The man page was written by Alexander Holupirek <alex@holupirek.de> while packaging BaseX for Debian GNU/Linux.
