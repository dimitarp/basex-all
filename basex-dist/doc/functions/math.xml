<functions name="Math" pref="math" namespace="http://www.w3.org/2005/xpath-functions/math">
  <text>The math module defines extension functions to perform mathematical operations, such as <code>pi</code>, <code>asin</code> and <code>acos</code>. All functions are preceded by the <code>math:</code> prefix. Some of the functions have also been specified in the <a href="http://www.w3.org/TR/xpath-functions-11/">Functions and Operators Specification</a> of the upcoming XQuery 1.1 Recommendation.</text>
  <function name="pi" type="xs:double">
    <signature/>
    <summary>Returns the value of the mathematical constant π.</summary>
    <rule>This function returns the <code>xs:double</code> value whose lexical representation is 3.141592653589793.</rule>
    <example>The expression <code>2*math:pi()</code> returns <code>6.283185307179586e0</code>.</example>
    <example>The expression <code>60 * (math:pi() div 180)</code> converts an angle of 60 degrees to radians.</example>
  </function>
  <function name="e" type="xs:double">
    <signature/>
    <summary>Returns the value of the mathematical constant <i>e</i>.</summary>
    <rule>This function returns the <code>xs:double</code> value whose lexical representation is 2.718281828459045.</rule>
    <example>The expression <code>5*math:e()</code> returns <code>13.591409142295225</code>.</example>
  </function>
  <function name="sqrt" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the square root of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the <code>xs:double</code> value of the mathematical square root of <code>$arg</code>.</rule>
  </function>
  <function name="sin" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the sine of the argument, expressed in radians.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the sine of <code>$arg</code>, treated as an angle in radians.</rule>
  </function>
  <function name="cos" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the cosine of the argument, expressed in radians.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the cosine of <code>$arg</code>, treated as an angle in radians.</rule>
  </function>
  <function name="tan" type="xs:double?">
    <signature>
      <arg name="" type="xs:double?"/>
    </signature>
    <summary>Returns the tangent of the argument, expressed in radians.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the tangent of <code>$arg</code>, treated as an angle in radians.</rule>
  </function>
  <function name="asin" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the arc sine of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the arc sine of <code>$arg</code>, returned as an angle in radians in the range -π/2 to +π/2.</rule>
  </function>
  <function name="acos" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the arc cosine of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the arc cosine of <code>$arg</code>, returned as an angle in radians in the range 0 to +π.</rule>
  </function>
  <function name="atan" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the arc tangent of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the arc tangent of <code>$arg</code>, returned as an angle in radians in the range -π/2 to +π/2.</rule>
  </function>
  <function name="atan2" type="xs:double?">
    <signature>
      <arg name="arg1" type="xs:double?"/>
      <arg name="arg2" type="xs:double?"/>
    </signature>
    <summary>Returns the arc tangent of the first argument divided by the second argument, the result being in the range -π/2 to +π/2 radians.</summary>
    <rule>If <code>$arg1</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the arc tangent of <code>$arg1</code> divided by <code>$arg2</code>, returned as an angle in radians in the range -π to +π.</rule>
  </function>
  <function name="pow" type="xs:double?">
    <signature>
      <arg name="arg1" type="xs:double?"/>
      <arg name="arg2" type="xs:double?"/>
    </signature>
    <summary>Returns the first argument raised to the power of the second argument.</summary>
    <rule>If <code>$arg1</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the <code>$arg1</code> raised to the power of <code>$arg2</code>.</rule>
    <example>The expression <code>math:pow(2, 3)</code> returns <code>8</code>.</example>
  </function>
  <function name="exp" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns <i>e</i> raised to the power of the argument.</summary>
    <rule>If <code>$arg1</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the value of <i>e</i> raised to the power of <code>$arg</code>.</rule>
    <example>The expression <code>math:exp(1)</code> returns <i>e</i>.</example>
  </function>
  <function name="log" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the natural logarithm of the argument.</summary>
    <rule>If <code>$arg1</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the natural logarithm (base <i>e</i>) of <code>$arg</code>.</rule>
    <example>The expression <code>math:log(math:e())</code> returns <code>1</code>.</example>
  </function>
  <function name="log10" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the base 10 logarithm of the argument.</summary>
    <rule>If <code>$arg1</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the base 10 logarithm of <code>$arg</code>.</rule>
    <example>The expression <code>math:log(100)</code> returns <code>2</code>.</example>
  </function>
  <function name="random" type="xs:double?">
    <signature/>
    <summary>Returns a random value.</summary>
    <rule>This function returns a random <code>xs:double</code> value between <code>0.0</code> and <code>1.0</code>.</rule>
  </function>
  <function name="sinh" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the hyperbolic sine of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the hyperbolic sine of <code>$arg</code>.</rule>
    <example>The expression <code>math:sinh(0)</code> returns <code>0</code>.</example>
  </function>
  <function name="cosh" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the hyperbolic cosine of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the hyperbolic cosine of <code>$arg</code>.</rule>
    <example>The expression <code>math:cosh(0)</code> returns <code>1</code>.</example>
  </function>
  <function name="tanh" type="xs:double?">
    <signature>
      <arg name="arg" type="xs:double?"/>
    </signature>
    <summary>Returns the hyperbolic tangent of the argument.</summary>
    <rule>If <code>$arg</code> is the empty sequence, the function returns the empty sequence.</rule>
    <rule>Otherwise the result is the hyperbolic tangent of <code>$arg</code>.</rule>
    <example>The expression <code>math:tanh(100)</code> returns <code>1</code>.</example>
  </function>
</functions>
